name: CMake Windows Build with Vulkan SDK

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        compiler: [ msvc, mingw ]
        build_type: [ Release, Debug ]

    env:
      BUILD_TYPE: ${{ matrix.build_type }}

    steps:
      - uses: actions/checkout@v4

      # Setup Vulkan SDK using the install-vulkan-sdk action by humbletim https://github.com/marketplace/actions/setup-vulkan-sdk
      - name: Install Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.1
        with:
          vulkan-query-version: 1.3.275.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader, SPIRV-Tools, Glslang
          vulkan-use-cache: true

      - name: Install GCC
        run: |
          choco install mingw --version=13.2.0

      - name: Verify glslang is available
        shell: cmd
        run: glslang --version

      - name: Setup MSVC environment
        if: matrix.compiler == 'msvc'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Add MinGW to PATH
        if: matrix.compiler == 'mingw'
        shell: cmd
        run: echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" >> $GITHUB_PATH

      - name: Install Ninja
        run: choco install ninja

      - name: Configure CMake
        shell: cmd
        run: cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DVulkan_INCLUDE_DIR=%VULKAN_SDK%/Include -DVulkan_LIBRARY=%VULKAN_SDK%/Lib/vulkan-1.lib

      - name: Build
        shell: cmd
        run: cmake --build build --config ${{ matrix.build_type }}

      - name: Test
        shell: cmd
        working-directory: build
        run: ctest -C ${{ matrix.build_type }}
